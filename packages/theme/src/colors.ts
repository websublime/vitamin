import colors from 'tailwindcss/colors';

const palette = {
    black: () => 'hsl(var(--black-color) / var(--opacity-color, 1))',
    'black-contrast': () => 'hsl(var(--black-contrast) / var(--opacity-color, 1))',
    current: 'currentColor',
    danger: () => 'hsl(var(--danger-color) / var(--opacity-color, 1))',
    'danger-contrast': () => 'hsl(var(--danger-contrast) / var(--opacity-color, 1))',
    'danger-dark': () => 'hsl(var(--danger-dark-color) / var(--opacity-color, 1))',
    'danger-dark-contrast': () => 'hsl(var(--danger-dark-contrast) / var(--opacity-color, 1))',
    'danger-light': () => 'hsl(var(--danger-light-color) / var(--opacity-color, 1))',
    'danger-light-contrast': () => 'hsl(var(--danger-light-contrast) / var(--opacity-color, 1))',
    dark: () => 'hsl(var(--dark-color) / var(--opacity-color, 1))',
    'dark-contrast': () => 'hsl(var(--dark-contrast) / var(--opacity-color, 1))',
    error: () => 'hsl(var(--error-color) / var(--opacity-color, 1))',
    'error-contrast': () => 'hsl(var(--error-contrast) / var(--opacity-color, 1))',
    'error-dark': () => 'hsl(var(--error-dark-color) / var(--opacity-color, 1))',
    'error-dark-contrast': () => 'hsl(var(--error-dark-contrast) / var(--opacity-color, 1))',
    'error-light': () => 'hsl(var(--error-light-color) / var(--opacity-color, 1))',
    'error-light-contrast': () => 'hsl(var(--error-light-contrast) / var(--opacity-color, 1))',
    grey: () => 'hsl(var(--grey-color) / var(--opacity-color, 1))',
    'grey-contrast': () => 'hsl(var(--grey-contrast) / var(--opacity-color, 1))',
    'grey-dark': () => 'hsl(var(--grey-dark-color) / var(--opacity-color, 1))',
    'grey-dark-contrast': () => 'hsl(var(--grey-dark-contrast) / var(--opacity-color, 1))',
    'grey-light': () => 'hsl(var(--grey-light-color) / var(--opacity-color, 1))',
    'grey-light-contrast': () => 'hsl(var(--grey-light-contrast) / var(--opacity-color, 1))',
    info: () => 'hsl(var(--info-color) / var(--opacity-color, 1))',
    'info-contrast': () => 'hsl(var(--info-contrast) / var(--opacity-color, 1))',
    'info-dark': () => 'hsl(var(--info-dark-color) / var(--opacity-color, 1))',
    'info-dark-contrast': () => 'hsl(var(--info-dark-contrast) / var(--opacity-color, 1))',
    'info-light': () => 'hsl(var(--info-light-color) / var(--opacity-color, 1))',
    'info-light-contrast': () => 'hsl(var(--info-light-contrast) / var(--opacity-color, 1))',
    light: () => 'hsl(var(--light-color) / var(--opacity-color, 1))',
    'light-contrast': () => 'hsl(var(--light-contrast) / var(--opacity-color, 1))',
    lime: colors.lime,
    primary: () => 'hsl(var(--primary-color) / var(--opacity-color, 1))',
    'primary-contrast': () => 'hsl(var(--primary-contrast) / var(--opacity-color, 1))',
    'primary-dark': () => 'hsl(var(--primary-dark-color) / var(--opacity-color, 1))',
    'primary-dark-contrast': () => 'hsl(var(--primary-dark-contrast) / var(--opacity-color, 1))',
    'primary-light': () => 'hsl(var(--primary-light-color) / var(--opacity-color, 1))',
    'primary-light-contrast': () => 'hsl(var(--primary-light-contrast) / var(--opacity-color, 1))',
    secondary: () => 'hsl(var(--secondary-color) / var(--opacity-color, 1))',
    'secondary-contrast': () => 'hsl(var(--secondary-contrast) / var(--opacity-color, 1))',
    'secondary-dark': () => 'hsl(var(--secondary-dark-color) / var(--opacity-color, 1))',
    'secondary-dark-contrast': () => 'hsl(var(--secondary-dark-contrast) / var(--opacity-color, 1))',
    'secondary-light': () => 'hsl(var(--secondary-light-color) / var(--opacity-color, 1))',
    'secondary-light-contrast': () => 'hsl(var(--secondary-light-contrast) / var(--opacity-color, 1))',
    success: () => 'hsl(var(--success-color) / var(--opacity-color, 1))',
    'success-contrast': () => 'hsl(var(--success-contrast) / var(--opacity-color, 1))',
    'success-dark': () => 'hsl(var(--success-dark-color) / var(--opacity-color, 1))',
    'success-dark-contrast': () => 'hsl(var(--success-dark-contrast) / var(--opacity-color, 1))',
    'success-light': () => 'hsl(var(--success-light-color) / var(--opacity-color, 1))',
    'success-light-contrast': () => 'hsl(var(--success-light-contrast) / var(--opacity-color, 1))',
    tertiary: () => 'hsl(var(--tertiary-color) / var(--opacity-color, 1))',
    'tertiary-contrast': () => 'hsl(var(--tertiary-contrast) / var(--opacity-color, 1))',
    'tertiary-dark': () => 'hsl(var(--tertiary-dark-color) / var(--opacity-color, 1))',
    'tertiary-dark-contrast': () => 'hsl(var(--tertiary-dark-contrast) / var(--opacity-color, 1))',
    'tertiary-light': () => 'hsl(var(--tertiary-light-color) / var(--opacity-color, 1))',
    'tertiary-light-contrast': () => 'hsl(var(--tertiary-light-contrast) / var(--opacity-color, 1))',
    transparent: 'transparent',
    warning: () => 'hsl(var(--warning-color) / var(--opacity-color, 1))',
    'warning-contrast': () => 'hsl(var(--warning-contrast) / var(--opacity-color, 1))',
    'warning-dark': () => 'hsl(var(--warning-dark-color) / var(--opacity-color, 1))',
    'warning-dark-contrast': () => 'hsl(var(--warning-dark-contrast) / var(--opacity-color, 1))',
    'warning-light': () => 'hsl(var(--warning-light-color) / var(--opacity-color, 1))',
    'warning-light-contrast': () => 'hsl(var(--warning-light-contrast) / var(--opacity-color, 1))',
    white: () => 'hsl(var(--white-color) / var(--opacity-color, 1))',
    'white-contrast': () => 'hsl(var(--white-contrast) / var(--opacity-color, 1))',
    ...colors
  };

module.exports = palette;

.vui-btn {
  @apply button-props transition-colors;

  padding: var(--button-padding-y, theme('padding.2')) var(--button-padding-x, theme('padding.4'));

  &:hover:not([disabled]) {
    --button-background-opacity: .8;
  }

  &:is([disabled]) {
    background-color: hsl(var(--grey-dark-color) / var(--button-background-opacity, 1));
  }

  @media (prefers-color-scheme: dark) {
    &-primary {
      background-color: hsl(var(--primary-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--primary-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-secondary {
      background-color: hsl(var(--secondary-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--secondary-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-tertiary {
      background-color: hsl(var(--tertiary-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--tertiary-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-info {
      background-color: hsl(var(--info-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--info-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-success {
      background-color: hsl(var(--success-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--success-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-error {
      background-color: hsl(var(--error-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--error-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-warning {
      background-color: hsl(var(--warning-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--warning-dark-contrast) / var(--button-color-opacity, 1));
    }

    &-danger {
      background-color: hsl(var(--danger-dark-color) / var(--button-background-opacity, 1));
      color: hsl(var(--danger-dark-contrast) / var(--button-color-opacity, 1));
    }
  }
}

@tailwind utilities;
@tailwind components;

@layer components {
  :host {
    @apply checkbox-props flex flex-wrap content-center;
  }

  :host-context(html.dark) {
    @apply checkbox-props-dark;
  }

  :host-context(html.light) {
    @apply checkbox-props-light;
  }

  .ui-checkbox-label {
    @apply flex;
  }

  slot[name=lable]::slotted(*) {
    display: inline-flex;
  }

  input[type="checkbox"],
  input[type="checkbox"] *,
  input[type="checkbox"] *::before,
  input[type="checkbox"] *::after {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
  }

  input[type="checkbox"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: var(--checkbox-diameter);
    height: var(--checkbox-diameter);
    border-radius: var(--checkbox-border-radius);
    background: var(--checkbox-background-color);
    border: var(--checkbox-border-width) var(--checkbox-border-style) var(--checkbox-border-color);
    -webkit-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s;
    cursor: pointer;
    position: relative;
  }

  input[type="checkbox"]::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    -webkit-box-shadow: 0 0 0 calc(var(--checkbox-diameter) / 2.5) var(--primary-color);
    box-shadow: 0 0 0 calc(var(--checkbox-diameter) / 2.5) var(--checkbox-checked-color);
    border-radius: inherit;
    opacity: 0;
    -webkit-transition: all 0.5s cubic-bezier(0.12, 0.4, 0.29, 1.46);
    -o-transition: all 0.5s cubic-bezier(0.12, 0.4, 0.29, 1.46);
    transition: all 0.5s cubic-bezier(0.12, 0.4, 0.29, 1.46);
  }

  input[type="checkbox"]::before {
    top: 40%;
    left: 50%;
    content: "";
    position: absolute;
    width: 4px;
    height: 7px;
    border-right: 2px solid var(--checkbox-background-color);
    border-bottom: 2px solid var(--checkbox-background-color);
    -webkit-transform: translate(-50%, -50%) rotate(45deg) scale(0);
    -ms-transform: translate(-50%, -50%) rotate(45deg) scale(0);
    transform: translate(-50%, -50%) rotate(45deg) scale(0);
    opacity: 0;
    -webkit-transition: all 0.1s cubic-bezier(0.71, -0.46, 0.88, 0.6),opacity 0.1s;
    -o-transition: all 0.1s cubic-bezier(0.71, -0.46, 0.88, 0.6),opacity 0.1s;
    transition: all 0.1s cubic-bezier(0.71, -0.46, 0.88, 0.6),opacity 0.1s;
  }

  /* actions */

  input[type="checkbox"]:hover {
    border-color: var(--checkbox-hover-color);
  }

  input[type="checkbox"]:checked {
    background: var(--checkbox-checked-color);
    border-color: transparent;
  }

  input[type="checkbox"]:checked::before {
    opacity: 1;
    -webkit-transform: translate(-50%, -50%) rotate(45deg) scale(var(--checkbox-checkmark-size));
    -ms-transform: translate(-50%, -50%) rotate(45deg) scale(var(--checkbox-checkmark-size));
    transform: translate(-50%, -50%) rotate(45deg) scale(var(--checkbox-checkmark-size));
    -webkit-transition: all 0.2s cubic-bezier(0.12, 0.4, 0.29, 1.46) 0.1s;
    -o-transition: all 0.2s cubic-bezier(0.12, 0.4, 0.29, 1.46) 0.1s;
    transition: all 0.2s cubic-bezier(0.12, 0.4, 0.29, 1.46) 0.1s;
  }

  input[type="checkbox"]:active:not(:checked)::after {
    -webkit-transition: none;
    -o-transition: none;
    -webkit-box-shadow: none;
    box-shadow: none;
    transition: none;
    opacity: 1;
  }
}
